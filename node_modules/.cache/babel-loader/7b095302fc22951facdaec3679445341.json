{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\AB\\\\Desktop\\\\trinkets-api\\\\shoping-cart\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\AB\\\\Desktop\\\\trinkets-api\\\\shoping-cart\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nexport var useForm = function useForm(initialData) {\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleChanges = function handleChanges(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSuccessMessage = _useState4[0],\n      setShowSuccessMessage = _useState4[1];\n\n  return [handleChanges, values, showSuccessMessage, setShowSuccessMessage, setValues];\n};","map":{"version":3,"sources":["C:/Users/AB/Desktop/trinkets-api/shoping-cart/src/hooks/useForm.js"],"names":["useState","useForm","initialData","values","setValues","handleChanges","e","target","name","value","showSuccessMessage","setShowSuccessMessage"],"mappings":";;AAAA,SAASA,QAAT,QAAwB,OAAxB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAiB;AAAA,kBAERF,QAAQ,CAACE,WAAD,CAFA;AAAA;AAAA,MAE7BC,MAF6B;AAAA,MAErBC,SAFqB;;AAGpC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACvBF,IAAAA,SAAS,iCACFD,MADE;AAEL,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFrB,OAAT;AAIH,GALD;;AAHoC,mBAUeT,QAAQ,CAAC,KAAD,CAVvB;AAAA;AAAA,MAU7BU,kBAV6B;AAAA,MAUVC,qBAVU;;AAcpC,SAAO,CAACN,aAAD,EAAeF,MAAf,EAAsBO,kBAAtB,EAAyCC,qBAAzC,EAAgEP,SAAhE,CAAP;AACH,CAfM","sourcesContent":["import { useState} from 'react'\r\n\r\nexport const useForm = (initialData) => {\r\n    \r\n    const [values, setValues] = useState(initialData);\r\n    const handleChanges = e => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const [showSuccessMessage,setShowSuccessMessage] = useState(false)\r\n\r\n\r\n    \r\n    return [handleChanges,values,showSuccessMessage,setShowSuccessMessage, setValues]\r\n}"]},"metadata":{},"sourceType":"module"}